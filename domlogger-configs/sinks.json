{
  "config": {
    "Element.prototype.setAttribute": {
      "match": [
        "\\[\"href",
        "\\[\"src",
        "\\[\"action",
        "\\[\"formaction",
        "\\[\"srcdoc",
        "\\[\"style"
      ]
    }
  },
  "hooks": {
    "CSS": {
      "attribute": [
        "set:Element.prototype.cssText",
        "set:CSSRule.prototype.cssText",
        "set:HTMLStyleElement.prototype.src",
        "set:HTMLStyleElement.prototype.text",
        "set:HTMLStyleElement.prototype.innerText",
        "set:HTMLStyleElement.prototype.innerHTML",
        "set:HTMLStyleElement.prototype.textContent",
        "set:HTMLLinkElement.prototype.href"
      ]
    },
    "DOM": {
      "attribute": [
        "set:Element.prototype.innerHTML",
        "set:Element.prototype.outerHTML",
        "set:HTMLAnchorElement.prototype.href",
        "set:HTMLButtonElement.prototype.formAction",
        "set:HTMLInputElement.prototype.formAction",
        "set:HTMLFormElement.prototype.action",
        "set:HTMLIFrameElement.prototype.src",
        "set:HTMLIFrameElement.prototype.srcdoc",
        "set:HTMLFrameElement.prototype.src",
        "set:HTMLFrameElement.prototype.srcdoc",
        "set:HTMLMediaElement.prototype.src",
        "set:HTMLSourceElement.prototype.src",
        "set:HTMLAreaElement.prototype.href",
        "set:HTMLInputElement.prototype.src",
        "set:HTMLBaseElement.prototype.href",
        "set:HTMLTrackElement.prototype.src",
        "set:HTMLEmbededElement.prototype.src",
        "set:HTMLScriptElement.prototype.src",
        "set:HTMLScriptElement.prototype.text",
        "set:HTMLScriptElement.prototype.innerText",
        "set:HTMLScriptElement.prototype.innerHTML",
        "set:HTMLScriptElement.prototype.textContent"
      ],
      "function": [
        "Element.prototype.insertAdjacentHTML",
        "Element.prototype.setAttribute",
        "HTMLScriptElement.prototype.append",
        "HTMLScriptElement.prototype.appendChild"
      ]
    },
    "JQUERY": {
      "function": [
        "$",
        "$.globalEval",
        "jQuery",
        "jQuery.globalEval",
        "jQuery.parseHTML",
        "jQuery.prototype.add",
        "jQuery.prototype.after",
        "jQuery.prototype.attr",
        "jQuery.prototype.append",
        "jQuery.prototype.appendTo",
        "jQuery.prototype.before",
        "jQuery.prototype.constructor",
        "jQuery.prototype.has",
        "jQuery.prototype.html",
        "jQuery.prototype.index",
        "jQuery.prototype.init",
        "jQuery.prototype.insertAfter",
        "jQuery.prototype.insertBefore",
        "jQuery.prototype.prepend",
        "jQuery.prototype.prependTo",
        "jQuery.prototype.prop",
        "jQuery.prototype.replaceAll",
        "jQuery.prototype.replaceWith",
        "jQuery.prototype.wrap",
        "jQuery.prototype.wrapAll",
        "jQuery.prototype.wrapInner"
      ]
    },
    "JSNAVIGATION": {
      "attribute": [
        "jsinitiatednav"
      ]
    },
    "MISC": {
      "attribute": ["set:document.domain","set:window.name"],
      "class": [
        "FileReader",
        "BroadcastChannel",
        "MessageChannel",
        "Blob"
      ],
      "function": [
        "document.evaluate",
        "Element.prototype.evaluate",
        "URL.createObjectURL",
        "MessagePort.prototype.postMessage",
        "BroadcastChannel.prototype.postMessage",
        "window.postMessage",
        "Worker.prototype.postMessage",
        "ServiceWorker.prototype.postMessage",
        "navigator.serviceWorker.register",
        "window.open",
        "Object.assign"
      ]
    },
    "NETWORK": {
      "attribute": [
        "//set:Request.prototype.body",
        "//set:Request.prototype.headers"
      ],
      "class": [
        "WebSocket",
        "EventSource",
        "Request"
      ],
      "function": [
        "fetch",
        "navigator.sendBeacon",
        "XMLHttpRequest.prototype.open"
      ]
    },
    "STORAGE": {
      "attribute": [
        "set:document.cookie"
      ],
      "function": ["localStorage.setItem", "sessionStorage.setItem"]
    },
    "XSS": {
      "class": ["Location"],
      "function": [
        "eval",
        "document.write",
        "document.writeln",
        "Range.prototype.createContextualFragment"
      ]
    }
  },
  "onload": "origBeforeUnload=onbeforeunload;onbeforeunload=(ne)=>{try{throw Error()}catch(e){if(e.stack.split('\\n').length>2){jsinitiatednav=`js initiated nav \\n${e.stack.split('\\n').slice(1).join('\\n')}`}}origBeforeUnload&&origBeforeUnload(ne)}"
}